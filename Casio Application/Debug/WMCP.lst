SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\calli\Documents\Github\Wireless-Comunication-between-Casio-Calculators\Casio Application\WMCP.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WMCP.c     1    #include "fxlib.h"
P   00000000              _OSVersionAsInt:                 ; function: OSVersionAsInt
                                                           ; frame size=20
    00000000 4F22                   STS.L       PR,@-R15
    00000002 7FF0                   ADD         #-16,R15
    00000004 D346                   MOV.L       L375+6,R3  ; _sc0015
    00000006 67F3                   MOV         R15,R7
    00000008 770C                   ADD         #12,R7
    0000000A 66F3                   MOV         R15,R6
    0000000C 7608                   ADD         #8,R6
    0000000E 65F3                   MOV         R15,R5
    00000010 7504                   ADD         #4,R5
    00000012 430B                   JSR         @R3
    00000014 64F3                   MOV         R15,R4
    00000016 60F0                   MOV.B       @R15,R0
    00000018 D342                   MOV.L       L375+10,R3 ; H'FF000000
    0000001A 600C                   EXTU.B      R0,R0
    0000001C D242                   MOV.L       L375+14,R2 ; H'00FF0000
    0000001E 4028                   SHLL16      R0
    00000020 4018                   SHLL8       R0
    00000022 2039                   AND         R3,R0
    00000024 6103                   MOV         R0,R1
    00000026 84F4                   MOV.B       @(4,R15),R0
    00000028 600C                   EXTU.B      R0,R0
    0000002A 4028                   SHLL16      R0
    0000002C 2029                   AND         R2,R0
    0000002E 201B                   OR          R1,R0
    00000030 6103                   MOV         R0,R1
    00000032 85F4                   MOV.W       @(8,R15),R0
    00000034 600D                   EXTU.W      R0,R0
    00000036 7F10                   ADD         #16,R15
    00000038 4F26                   LDS.L       @R15+,PR
    0000003A 000B                   RTS
    0000003C 201B                   OR          R1,R0
    0000003E              _delay:                          ; function: delay
                                                           ; frame size=0
    0000003E E505                   MOV         #5,R5
    00000040 E400                   MOV         #0,R4
    00000042              L355:                             
    00000042 7401                   ADD         #1,R4
    00000044 634E                   EXTS.B      R4,R3
    00000046 3353                   CMP/GE      R5,R3
    00000048 8BFB                   BF          L355
    0000004A 000B                   RTS
    0000004C 0009                   NOP
    0000004E              _CheckKeyRow:                    ; function: CheckKeyRow
                                                           ; frame size=32
    0000004E 634C                   EXTU.B      R4,R3
    00000050 2FE6                   MOV.L       R14,@-R15
    00000052 E50F                   MOV         #15,R5
    00000054 2FD6                   MOV.L       R13,@-R15
    00000056 4309                   SHLR2       R3
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 2549                   AND         R4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000005C 2FB6                   MOV.L       R11,@-R15
    0000005E 4309                   SHLR2       R3
    00000060 2FA6                   MOV.L       R10,@-R15
    00000062 665C                   EXTU.B      R5,R6
    00000064 2F96                   MOV.L       R9,@-R15
    00000066 6063                   MOV         R6,R0
    00000068 4F22                   STS.L       PR,@-R15
    0000006A 4011                   CMP/PZ      R0
    0000006C 7FFC                   ADD         #-4,R15
    0000006E 2F30                   MOV.B       R3,@R15
    00000070 8B01                   BF          L356
    00000072 A005                   BRA         L357
    00000074 C907                   AND         #7,R0
    00000076              L356:                             
    00000076 6007                   NOT         R0,R0
    00000078 7001                   ADD         #1,R0
    0000007A C907                   AND         #7,R0
    0000007C 6007                   NOT         R0,R0
    0000007E 7001                   ADD         #1,R0
    00000080              L357:                             
    00000080 994B                   MOV.W       L375,R9    ; H'AAAA
    00000082 E208                   MOV         #8,R2
    00000084 DB29                   MOV.L       L375+18,R11; H'A4000102
    00000086 6403                   MOV         R0,R4
    00000088 9D48                   MOV.W       L375+2,R13 ; H'FF00
    0000008A E503                   MOV         #3,R5
    0000008C DE28                   MOV.L       L375+22,R14; H'A4000118
    0000008E EA01                   MOV         #1,R10
    00000090 4000                   SHLL        R0
    00000092 450C                   SHAD        R0,R5
    00000094 4A4C                   SHAD        R4,R10
    00000096 6AA7                   NOT         R10,R10
    00000098 6CB3                   MOV         R11,R12
    0000009A 3623                   CMP/GE      R2,R6
    0000009C 8D0D                   BT/S        L358
    0000009E 7C36                   ADD         #54,R12
    000000A0 259A                   XOR         R9,R5
    000000A2 2B51                   MOV.W       R5,@R11
    000000A4 60E1                   MOV.W       @R14,R0
    000000A6 20D9                   AND         R13,R0
    000000A8 CBAA                   OR          #170,R0
    000000AA BFC8                   BSR         _delay
    000000AC 2E01                   MOV.W       R0,@R14
    000000AE D221                   MOV.L       L375+26,R2 ; H'A4000122
    000000B0 22A0                   MOV.B       R10,@R2
    000000B2 60C0                   MOV.B       @R12,R0
    000000B4 C9F0                   AND         #240,R0
    000000B6 A00D                   BRA         L374
    000000B8 CB0F                   OR          #15,R0
    000000BA              L358:                             
    000000BA 2B91                   MOV.W       R9,@R11
    000000BC 60E1                   MOV.W       @R14,R0
    000000BE 20D9                   AND         R13,R0
    000000C0 CBAA                   OR          #170,R0
    000000C2 205A                   XOR         R5,R0
    000000C4 BFBB                   BSR         _delay
    000000C6 2E01                   MOV.W       R0,@R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C8 D31A                   MOV.L       L375+26,R3 ; H'A4000122
    000000CA E2FF                   MOV         #-1,R2
    000000CC 2320                   MOV.B       R2,@R3
    000000CE 60C0                   MOV.B       @R12,R0
    000000D0 C9F0                   AND         #240,R0
    000000D2 20AB                   OR          R10,R0
    000000D4              L374:                             
    000000D4 BFB3                   BSR         _delay
    000000D6 2C00                   MOV.B       R0,@R12
    000000D8 D317                   MOV.L       L375+30,R3 ; H'A4000120
    000000DA 6030                   MOV.B       @R3,R0
    000000DC 62F0                   MOV.B       @R15,R2
    000000DE 6007                   NOT         R0,R0
    000000E0 622C                   EXTU.B      R2,R2
    000000E2 622B                   NEG         R2,R2
    000000E4 402C                   SHAD        R2,R0
    000000E6 C901                   AND         #1,R0
    000000E8 BFA9                   BSR         _delay
    000000EA 2F00                   MOV.B       R0,@R15
    000000EC 2B91                   MOV.W       R9,@R11
    000000EE 60E1                   MOV.W       @R14,R0
    000000F0 20D9                   AND         R13,R0
    000000F2 CBAA                   OR          #170,R0
    000000F4 BFA3                   BSR         _delay
    000000F6 2E01                   MOV.W       R0,@R14
    000000F8 9211                   MOV.W       L375+4,R2  ; H'5555
    000000FA 2B21                   MOV.W       R2,@R11
    000000FC 60E1                   MOV.W       @R14,R0
    000000FE 20D9                   AND         R13,R0
    00000100 CB55                   OR          #85,R0
    00000102 BF9C                   BSR         _delay
    00000104 2E01                   MOV.W       R0,@R14
    00000106 60F0                   MOV.B       @R15,R0
    00000108 7F04                   ADD         #4,R15
    0000010A 4F26                   LDS.L       @R15+,PR
    0000010C 69F6                   MOV.L       @R15+,R9
    0000010E 6AF6                   MOV.L       @R15+,R10
    00000110 6BF6                   MOV.L       @R15+,R11
    00000112 6CF6                   MOV.L       @R15+,R12
    00000114 6DF6                   MOV.L       @R15+,R13
    00000116 000B                   RTS
    00000118 6EF6                   MOV.L       @R15+,R14
    0000011A              L375:                             
    0000011A AAAA                   .DATA.W     H'AAAA
    0000011C FF00                   .DATA.W     H'FF00
    0000011E 5555                   .DATA.W     H'5555
    00000120 <00000000>             .DATA.L     _sc0015
    00000124 FF000000               .DATA.L     H'FF000000
    00000128 00FF0000               .DATA.L     H'00FF0000
    0000012C A4000102               .DATA.L     H'A4000102
    00000130 A4000118               .DATA.L     H'A4000118
    00000134 A4000122               .DATA.L     H'A4000122
    00000138 A4000120               .DATA.L     H'A4000120
    0000013C              _KeyDown:                        ; function: KeyDown
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __divls, __modls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000013C 2FE6                   MOV.L       R14,@-R15
    0000013E EE0A                   MOV         #10,R14
    00000140 2FD6                   MOV.L       R13,@-R15
    00000142 4F22                   STS.L       PR,@-R15
    00000144 D33C                   MOV.L       L376,R3    ; H'A44B0000
    00000146 7FE8                   ADD         #-24,R15
    00000148 2F40                   MOV.B       R4,@R15
    0000014A 1F31                   MOV.L       R3,@(4,R15)
    0000014C 6DF0                   MOV.B       @R15,R13
    0000014E BF57                   BSR         _OSVersionAsInt
    00000150 6DDC                   EXTU.B      R13,R13
    00000152 D23A                   MOV.L       L376+4,R2  ; H'02020000
    00000154 3023                   CMP/GE      R2,R0
    00000156 8B26                   BF          L361
    00000158 D339                   MOV.L       L376+8,R3  ; __modls
    0000015A 61D3                   MOV         R13,R1
    0000015C 430B                   JSR         @R3
    0000015E 60E3                   MOV         R14,R0
    00000160 2F00                   MOV.B       R0,@R15
    00000162 E610                   MOV         #16,R6
    00000164 D337                   MOV.L       L376+12,R3 ; _memcpy
    00000166 64F3                   MOV         R15,R4
    00000168 55F1                   MOV.L       @(4,R15),R5
    0000016A 430B                   JSR         @R3
    0000016C 7408                   ADD         #8,R4
    0000016E E501                   MOV         #1,R5
    00000170 64F0                   MOV.B       @R15,R4
    00000172 61D3                   MOV         R13,R1
    00000174 D234                   MOV.L       L376+16,R2 ; __divls
    00000176 644C                   EXTU.B      R4,R4
    00000178 6343                   MOV         R4,R3
    0000017A 2359                   AND         R5,R3
    0000017C 4308                   SHLL2       R3
    0000017E 4300                   SHLL        R3
    00000180 420B                   JSR         @R2
    00000182 60E3                   MOV         R14,R0
    00000184 330C                   ADD         R0,R3
    00000186 73FF                   ADD         #-1,R3
    00000188 6053                   MOV         R5,R0
    0000018A 403C                   SHAD        R3,R0
    0000018C 6343                   MOV         R4,R3
    0000018E 4321                   SHAR        R3
    00000190 4300                   SHLL        R3
    00000192 61F3                   MOV         R15,R1
    00000194 7108                   ADD         #8,R1
    00000196 331C                   ADD         R1,R3
    00000198 6231                   MOV.W       @R3,R2
    0000019A 622D                   EXTU.W      R2,R2
    0000019C 2029                   AND         R2,R0
    0000019E 2008                   TST         R0,R0
    000001A0 0029                   MOVT        R0
    000001A2 A00E                   BRA         L363
    000001A4 CA01                   XOR         #1,R0
    000001A6              L361:                             
    000001A6 61D3                   MOV         R13,R1
    000001A8 D327                   MOV.L       L376+16,R3 ; __divls
    000001AA 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001AC 60E3                   MOV         R14,R0
    000001AE 6403                   MOV         R0,R4
    000001B0 D323                   MOV.L       L376+8,R3  ; __modls
    000001B2 61D3                   MOV         R13,R1
    000001B4 74FF                   ADD         #-1,R4
    000001B6 4408                   SHLL2       R4
    000001B8 4408                   SHLL2       R4
    000001BA 430B                   JSR         @R3
    000001BC 60E3                   MOV         R14,R0
    000001BE BF46                   BSR         _CheckKeyRow
    000001C0 340C                   ADD         R0,R4
    000001C2              L363:                             
    000001C2 7F18                   ADD         #24,R15
    000001C4 4F26                   LDS.L       @R15+,PR
    000001C6 6DF6                   MOV.L       @R15+,R13
    000001C8 000B                   RTS
    000001CA 6EF6                   MOV.L       @R15+,R14
    000001CC              _GetKeyMod:                      ; function: GetKeyMod
                                                           ; frame size=20
    000001CC 2FE6                   MOV.L       R14,@-R15
    000001CE 2FD6                   MOV.L       R13,@-R15
    000001D0 2FC6                   MOV.L       R12,@-R15
    000001D2 4F22                   STS.L       PR,@-R15
    000001D4 D31D                   MOV.L       L376+20,R3 ; _GetKey
    000001D6 7FFC                   ADD         #-4,R15
    000001D8 430B                   JSR         @R3
    000001DA 6C43                   MOV         R4,R12
    000001DC 2F00                   MOV.B       R0,@R15
    000001DE EE00                   MOV         #0,R14
    000001E0 ED50                   MOV         #80,R13
    000001E2              L366:                             
    000001E2 BFAB                   BSR         _KeyDown
    000001E4 64E3                   MOV         R14,R4
    000001E6 600C                   EXTU.B      R0,R0
    000001E8 2008                   TST         R0,R0
    000001EA 8902                   BT          L367
    000001EC 6EEC                   EXTU.B      R14,R14
          WMCP.c     2    #include "sh4Compability.h"
    000001EE A004                   BRA         L365
    000001F0 2CE2                   MOV.L       R14,@R12
    000001F2              L367:                             
    000001F2 7E01                   ADD         #1,R14
    000001F4 62EC                   EXTU.B      R14,R2
    000001F6 32D3                   CMP/GE      R13,R2
    000001F8 8BF3                   BF          L366
    000001FA              L365:                             
    000001FA 60F0                   MOV.B       @R15,R0
    000001FC 7F04                   ADD         #4,R15
    000001FE 4F26                   LDS.L       @R15+,PR
    00000200 6CF6                   MOV.L       @R15+,R12
    00000202 6DF6                   MOV.L       @R15+,R13
    00000204 000B                   RTS
    00000206 6EF6                   MOV.L       @R15+,R14
          WMCP.c     3    
          WMCP.c     4    int AddIn_main(int isAppli, unsigned short OptionNum) {
    00000208              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WMCP.c     5        unsigned int key;
          WMCP.c     6    
          WMCP.c     7        Bdisp_AllClr_DDVRAM();
    00000208 D311                   MOV.L       L376+24,R3 ; _Bdisp_AllClr_DDVRAM
    0000020A 7FFC                   ADD         #-4,R15
    0000020C 430B                   JSR         @R3
    0000020E 0009                   NOP
          WMCP.c     8    
          WMCP.c     9        locate(1,4);
    00000210 D210                   MOV.L       L376+28,R2 ; _locate
    00000212 E504                   MOV         #4,R5
    00000214 420B                   JSR         @R2
    00000216 E401                   MOV         #1,R4
          WMCP.c    10        Print((unsigned char*)"This application is");
    00000218 D40F                   MOV.L       L376+32,R4 ; L344
    0000021A D310                   MOV.L       L376+36,R3 ; _Print
    0000021C 430B                   JSR         @R3
    0000021E 0009                   NOP
          WMCP.c    11        locate(1,5);
    00000220 D20C                   MOV.L       L376+28,R2 ; _locate
    00000222 E505                   MOV         #5,R5
    00000224 420B                   JSR         @R2
    00000226 E401                   MOV         #1,R4
          WMCP.c    12        Print((unsigned char*)" sample Add-In.");
    00000228 D40D                   MOV.L       L376+40,R4 ; L345
    0000022A D30C                   MOV.L       L376+36,R3 ; _Print
    0000022C 430B                   JSR         @R3
    0000022E 0009                   NOP
          WMCP.c    13    
          WMCP.c    14        while(1){
    00000230              L371:                             
          WMCP.c    15            GetKey(&key);
    00000230 BFCC                   BSR         _GetKeyMod
    00000232 64F3                   MOV         R15,R4
    00000234 AFFC                   BRA         L371
    00000236 0009                   NOP
    00000238              L376:                             
    00000238 A44B0000               .DATA.L     H'A44B0000
    0000023C 02020000               .DATA.L     H'02020000
    00000240 <00000000>             .DATA.L     __modls
    00000244 <00000000>             .DATA.L     _memcpy
    00000248 <00000000>             .DATA.L     __divls
    0000024C <00000000>             .DATA.L     _GetKey
    00000250 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000254 <00000000>             .DATA.L     _locate
    00000258 <00000000>             .DATA.L     L344
    0000025C <00000000>             .DATA.L     _Print
    00000260 <00000000>             .DATA.L     L345
          WMCP.c    16        }
          WMCP.c    17    
          WMCP.c    18        return 1;
          WMCP.c    19    }
          WMCP.c    20    
          WMCP.c    21    //****************************************************************************
          WMCP.c    22    //**************                 Notice!                      ****************
          WMCP.c    23    //**************  Please do not change the following source.  ****************
          WMCP.c    24    //****************************************************************************




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WMCP.c    25    
          WMCP.c    26    #pragma section _BR_Size
          WMCP.c    27    unsigned long BR_Size;
          WMCP.c    28    #pragma section
          WMCP.c    29    #pragma section _TOP
          WMCP.c    30    
          WMCP.c    31    int InitializeSystem(int isAppli, unsigned short OptionNum) {
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          WMCP.c    32        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L377+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L377:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          WMCP.c    33    }
          WMCP.c    34    
          WMCP.c    35    #pragma section
C   00000000              _sc0015:                         ; static: sc0015
    00000000 D201D00242             .DATA.L     H'D201D002,H'422B0009,H'80010070,H'00000015
             2B00098001   
             0070000000   
             15           
    00000010              L344:
    00000010 5468697320             .SDATA      "This application is"
             6170706C69   
             636174696F   
             6E206973     
    00000023 00                     .DATA.B     H'00
    00000024              L345:
    00000024 2073616D70             .SDATA      " sample Add-In."
             6C65204164   
             642D496E2E   
    00000033 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1
























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 20-Aug-2022 11:35:36  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        53




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       35



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000264 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000034 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000002A8 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           9
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            33






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\calli\AppData\Local\Temp\hmk5706.tmp 

